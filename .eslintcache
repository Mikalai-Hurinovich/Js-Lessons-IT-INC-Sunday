[{"D:\\react-prosto\\JsLessons\\src\\App.tsx":"1","D:\\react-prosto\\JsLessons\\src\\containers\\CurrencyExchangeContainer\\CurrencyEContainer.tsx":"2","D:\\react-prosto\\JsLessons\\src\\redux\\actions.ts":"3","D:\\react-prosto\\JsLessons\\src\\redux\\currencyReducer.ts":"4","D:\\react-prosto\\JsLessons\\src\\redux\\selectors.ts":"5","D:\\react-prosto\\JsLessons\\src\\components\\CurrencyExchange\\CurrencyExchange.tsx":"6","D:\\react-prosto\\JsLessons\\src\\index.tsx":"7","D:\\react-prosto\\JsLessons\\src\\redux\\state.ts":"8","D:\\react-prosto\\JsLessons\\src\\lessons\\lesson1\\lesson1.tsx":"9","D:\\react-prosto\\JsLessons\\src\\lessons\\lesson3\\Lesson3.tsx":"10","D:\\react-prosto\\JsLessons\\src\\lessons\\lesson2\\lesson2.ts":"11","D:\\react-prosto\\JsLessons\\src\\lessons\\lesson3\\lesson_3.ts":"12","D:\\react-prosto\\JsLessons\\src\\lessons\\lesson3\\API.ts":"13","D:\\react-prosto\\JsLessons\\src\\lessons\\lesson4\\lesson_4.ts":"14","D:\\react-prosto\\JsLessons\\src\\lessons\\lesson4\\Lesson4.tsx":"15","D:\\react-prosto\\JsLessons\\src\\lessons\\lesson5\\lesson5.ts":"16","D:\\react-prosto\\JsLessons\\src\\lessons\\lesson6\\lesson6.ts":"17","D:\\react-prosto\\JsLessons\\src\\lessons\\lesson7\\lesson7.ts":"18"},{"size":541,"mtime":1621418764559,"results":"19","hashOfConfig":"20"},{"size":2876,"mtime":1617796466572,"results":"21","hashOfConfig":"20"},{"size":2239,"mtime":1617794534330,"results":"22","hashOfConfig":"20"},{"size":1702,"mtime":1617791087425,"results":"23","hashOfConfig":"20"},{"size":502,"mtime":1617796368222,"results":"24","hashOfConfig":"20"},{"size":3871,"mtime":1609757735301,"results":"25","hashOfConfig":"20"},{"size":319,"mtime":1609752860853,"results":"26","hashOfConfig":"20"},{"size":286,"mtime":1609751766196,"results":"27","hashOfConfig":"20"},{"size":860,"mtime":1609756877852,"results":"28","hashOfConfig":"20"},{"size":2742,"mtime":1619425460918,"results":"29","hashOfConfig":"20"},{"size":5300,"mtime":1618179428252,"results":"30","hashOfConfig":"20"},{"size":2825,"mtime":1618855446973,"results":"31","hashOfConfig":"20"},{"size":568,"mtime":1619423823296,"results":"32","hashOfConfig":"20"},{"size":7391,"mtime":1619433543024,"results":"33","hashOfConfig":"20"},{"size":447,"mtime":1618865287203,"results":"34","hashOfConfig":"20"},{"size":7988,"mtime":1620761897620,"results":"35","hashOfConfig":"20"},{"size":8538,"mtime":1620769993883,"results":"36","hashOfConfig":"20"},{"size":4163,"mtime":1621505438217,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"153qt67",{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"55"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\react-prosto\\JsLessons\\src\\App.tsx",[],"D:\\react-prosto\\JsLessons\\src\\containers\\CurrencyExchangeContainer\\CurrencyEContainer.tsx",[],"D:\\react-prosto\\JsLessons\\src\\redux\\actions.ts",[],["79","80"],"D:\\react-prosto\\JsLessons\\src\\redux\\currencyReducer.ts",[],"D:\\react-prosto\\JsLessons\\src\\redux\\selectors.ts",[],"D:\\react-prosto\\JsLessons\\src\\components\\CurrencyExchange\\CurrencyExchange.tsx",[],"D:\\react-prosto\\JsLessons\\src\\index.tsx",[],"D:\\react-prosto\\JsLessons\\src\\redux\\state.ts",[],["81","82"],"D:\\react-prosto\\JsLessons\\src\\lessons\\lesson1\\lesson1.tsx",[],"D:\\react-prosto\\JsLessons\\src\\lessons\\lesson3\\Lesson3.tsx",[],"D:\\react-prosto\\JsLessons\\src\\lessons\\lesson2\\lesson2.ts",["83","84","85"],"D:\\react-prosto\\JsLessons\\src\\lessons\\lesson3\\lesson_3.ts",["86","87","88"],"import {rejects} from \"assert\";\r\nimport {log} from \"util\";\r\n\r\n// console.log('lesson 3');\r\n\r\n// Event loop\r\n// https://learn.javascript.ru/event-loop\r\n// https://habr.com/ru/company/ruvds/blog/340508/\r\n// https://www.youtube.com/watch?v=8aGhZQkoFbQ\r\n// https://www.youtube.com/watch?v=j4_9BZezSUA\r\n// https://www.jsv9000.app/\r\n\r\n// Promise\r\n// https://learn.javascript.ru/promise-basics\r\n// https://www.youtube.com/watch?v=1idOY3C1gYU\r\n\r\n\r\n// https://jsonplaceholder.typicode.com/posts/1\r\n// https://habr.com/ru/company/oleg-bunin/blog/417461/?_ga=2.54695343.543933152.1602500664-1040035071.1596811661\r\n\r\n// res() и rej() принимает только один аргумент!!\r\n// let promise = new Promise((resolve, reject) => {\r\n//     setTimeout(() => {\r\n//         if (true) {\r\n//             resolve({id: 1264, name: 'Mikola'})\r\n//             // здесь мы передадим один аргумент, который придет в then первым\r\n//             // аргументом,\r\n//             // напр resolve\r\n//             // будет равен 5\r\n//         } else {\r\n//             reject(10)// здесь мы передадим один аргумент, который придет в then вторым аргументом, если не сработал\r\n//             // resolve напр reject будет равен 10\r\n//         }\r\n//     }, 1000)\r\n// })\r\n//\r\n// promise.then(resolve => {\r\n//         console.log(resolve, 'res')\r\n//         // @ts-ignore\r\n//         return {...resolve, age: 28}\r\n//     },\r\n//     reject => {\r\n//         console.log(reject)\r\n//     }).then(resolve => {\r\n//     console.log(resolve, 'res2')\r\n// })\r\n\r\n// let promise = new Promise((resolve, reject) => {\r\n//     setTimeout(() => {\r\n//         if (true) {\r\n//             resolve({id: 1264, name: 'Mikola'})\r\n//             // здесь мы передадим один аргумент, который придет в then первым\r\n//             // аргументом,\r\n//             // напр resolve\r\n//             // будет равен 5\r\n//         } else {\r\n//             reject('Error')// здесь мы передадим один аргумент, который придет в then вторым аргументом, если не\r\n//             // сработал\r\n//             // resolve напр reject будет равен 10\r\n//         }\r\n//     }, 1000)\r\n// })\r\n// promise.then(resolve => {\r\n//\r\n//     console.log(resolve, 'resolve')\r\n// })\r\n//     // catch это тот-же второй callback, reject, его проще понимать, лучше восприятие кода, чем несколько callback'ов\r\n//     .catch(error => {\r\n//         throw new Error(error)\r\n//     })\r\n\r\n\r\n// just a plug\r\nexport default () => {\r\n};\r\n","D:\\react-prosto\\JsLessons\\src\\lessons\\lesson3\\API.ts",[],"D:\\react-prosto\\JsLessons\\src\\lessons\\lesson4\\lesson_4.ts",["89"],"D:\\react-prosto\\JsLessons\\src\\lessons\\lesson4\\Lesson4.tsx",[],"D:\\react-prosto\\JsLessons\\src\\lessons\\lesson5\\lesson5.ts",["90"],"console.log('Lesson 5');\r\n\r\n// Keyword - this\r\n// https://developer.mozilla.org/ru/docs/Web/JavaScript/Reference/Operators/this\r\n// https://learn.javascript.ru/object-methods\r\n// https://habr.com/ru/company/ruvds/blog/419371/\r\n// https://www.youtube.com/watch?v=aQkgUUmUJy4&list=PLqKQF2ojwm3l4oPjsB9chrJmlhZ-zOzWT\r\n\r\n// А тут заходим и ставим лайк!!!\r\n// https://www.youtube.com/watch?v=T1vJ8OdJq0o\r\n\r\n// https://www.youtube.com/watch?v=xY-mwUzDjsk\r\n\r\n// Keyword - new. Function-constructor\r\n// https://learn.javascript.ru/constructor-new\r\n// https://metanit.com/web/javascript/4.5.php\r\n// https://developer.mozilla.org/ru/docs/Web/JavaScript/Reference/Operators/new\r\n\r\n// Call, Apply, Bind\r\n// https://learn.javascript.ru/call-apply-decorators\r\n// https://medium.com/@stasonmars/%D0%BF%D0%BE%D0%B4%D1%80%D0%BE%D0%B1%D0%BD%D0%BE-%D0%BE-%D0%BC%D0%B5%D1%82%D0%BE%D0%B4%D0%B0%D1%85-apply-call-%D0%B8-bind-%D0%BD%D0%B5%D0%BE%D0%B1%D1%85%D0%BE%D0%B4%D0%B8%D0%BC%D1%8B%D1%85-%D0%BA%D0%B0%D0%B6%D0%B4%D0%BE%D0%BC%D1%83-javascript-%D1%80%D0%B0%D0%B7%D1%80%D0%B0%D0%B1%D0%BE%D1%82%D1%87%D0%B8%D0%BA%D1%83-ddd5f9b06290\r\n\r\n// let object = {\r\n//     name: 'Mikola',\r\n//     f() {\r\n//         setTimeout(function () {\r\n//             // @ts-ignore\r\n//             console.log(this.age)\r\n//         }, 0);\r\n//\r\n//     },\r\n//     arrow: () => {\r\n//         setTimeout(() => {\r\n//             console.log(this)\r\n//         }, 0)\r\n//     }\r\n// }\r\n// obj.f()\r\n// obj.arrow()\r\n\r\n// function inner() {\r\n//     console.log(this)\r\n// }\r\n// let obj = {\r\n//     name: 'Mikola',\r\n//     f() {\r\n//         setTimeout(inner.bind(obj), 0);\r\n//\r\n//     }\r\n// }\r\n// obj.f()\r\n\r\n// Task 01\r\n// Дан объект someObj, реализуйте функцию greeting и присвойте ее ключу объекта с аналогичным именем.\r\n// Функция должна вернуть строку `My name is ${name}. I am ${age}`, где name и age берутся из свойств объекта\r\n//\r\ntype someObjType = {\r\n    name: string;\r\n    age: number;\r\n}\r\nlet someObj: someObjType = {\r\n    name: 'Eugene',\r\n    age: 32\r\n}\r\n\r\nfunction greeting() {\r\n    // @ts-ignore\r\n    console.log(`My name is ${this.name}. I am ${this.age}`);\r\n}\r\n\r\n// @ts-ignore\r\nsomeObj.greeting = greeting;\r\n// @ts-ignore\r\nsomeObj.greeting();\r\n\r\n\r\n// let obj: any = {\r\n//     func: () => {\r\n//         console.log('arrow', this)\r\n//     }\r\n// }\r\n\r\n// Task 02\r\n// реализовать счетчик counter в виде объекта со следующими методами:\r\n// get current count; - выводит текущее значение счетчика\r\n// increment; - увеличивает значение счетчика на 1\r\n// decrement; - уменьшает значение счетчика на 1\r\n// set current count; - принимает и присваивает значение счетчику\r\n// rest current count - устанавливает значение счетчика равным 0\r\n// все методы должны ссылаться на сам объект\r\n\r\n// let counter = {\r\n//     count: 0,\r\n//     getCurrentCount() {\r\n//         return this.count\r\n//     },\r\n//     increment() {\r\n//         return ++this.count;\r\n//     },\r\n//     decrement() {\r\n//         return --this.count;\r\n//     },\r\n//     setCurrentCount(newCount: number) {\r\n//         return this.count = newCount;\r\n//     },\r\n//     resetCurrentCount() {\r\n//         return this.count = 0;\r\n//     }\r\n// }\r\n// console.log(counter.count)\r\n// console.log(counter.setCurrentCount(6))\r\n// console.log(counter.getCurrentCount())\r\n// console.log(counter.increment())\r\n// console.log(counter.decrement())\r\n// console.log(counter.resetCurrentCount())\r\n// console.log(counter.count)\r\n\r\n\r\n// Task 03\r\n// переделайте код из Task 02, что бы сработал следующий код:\r\n// counter.setCurrentCount(10).increment().increment().increment().decrement().getCurrentCount() // 12\r\n\r\n// let counter = {\r\n//     count: 0,\r\n//     getCurrentCount() {\r\n//         return this.count\r\n//     },\r\n//     increment() {\r\n//         this.count++;\r\n//         return this;\r\n//     },\r\n//     decrement() {\r\n//         this.count--;\r\n//         return this;\r\n//     },\r\n//     setCurrentCount(newCount: number) {\r\n//         this.count = newCount;\r\n//         return this;\r\n//     },\r\n//     resetCurrentCount() {\r\n//         this.count = 0;\r\n//         return this;\r\n//     }\r\n// }\r\n// console.log(counter.setCurrentCount(10).increment().increment().increment().decrement().getCurrentCount())\r\n\r\n// Task 04\r\n// Написать функцию конструктор myFirstConstructorFunc которая принимает 2 параметра name и age и возвращает объект\r\n// у которого будут эти свойства и метод greeting из Task 01\r\n\r\n// type myFirstConstructorFuncType = {\r\n//     name: string\r\n//     age: number\r\n// }\r\n//\r\n// function myFirstConstructorFunc(this: myFirstConstructorFuncType, name: string, age: number) {\r\n//     return {\r\n//         name,\r\n//         age,\r\n//         greeting\r\n//     }\r\n// }\r\n//\r\n//\r\n// // @ts-ignore\r\n// let myConstructor = new myFirstConstructorFunc('Mikola', 28)\r\n// console.log(myConstructor.greeting())\r\n\r\n// Task 05 есть 2 объекта One и Two. С помощью bind и метода sayHello заставьте поздороваться объект One\r\n\r\nlet One = {name: 'One'};\r\nlet Two = {\r\n    name: 'Two', sayHello: function () {\r\n        console.log(`Hello, my name is ${this.name}`)\r\n    }\r\n};\r\nlet sayHelloOne = Two.sayHello.bind(One)()\r\nconsole.log(sayHelloOne)\r\n\r\n\r\n// Task 06\r\n// создайте объект helperObj у которого есть следующие методы:\r\n// changeName - меняет значение у свойства name объекта на полученное значение\r\n// setAge - устанавливает полученное значение в свойство age объекта\r\n// greeting - используется функция sayHello из Task 05\r\n// можно использовать @ts-ignore\r\n\r\n// let helperObj = {\r\n//     // @ts-ignore\r\n//     changeName(name: string) {\r\n//         // @ts-ignore\r\n//         return this.name = name\r\n//     },\r\n//     // @ts-ignore\r\n//     setAge(age: number) {\r\n//         // @ts-ignore\r\n//         return this.age = age\r\n//     },\r\n//     greeting,\r\n// }\r\n\r\n\r\n// Bind\r\n// 1) Дана функция sumTwoNumbers, реализовать функцию bindNumber которая принимает функцию sumTwoNumbers и число, и\r\n// возвращает другую функцию, которое также принимает число и возвращает сумму этих чисел. Замыкание использовать нельзя\r\n\r\n// function sumTwoNumbers(a: number, b: number): number {\r\n//     return a + b\r\n// };\r\n//\r\n// function bindNumber(f: Function, n: number) {\r\n//     return f.bind(null, n)\r\n// }\r\n//\r\n// let bindTen = bindNumber(sumTwoNumbers, 10)\r\n\r\n// 2) Напишите функцию которая принимает первым аргументом объект One, а вторым helperObj. Данная функция\r\n// возвращает другую функцию которая принимает строку в качестве аргумента и устанавливает ее свойству name объекта One\r\n// 3) Одной строкой установить с помощью helperObj объекту Two поле age в значение 30\r\n// 4) Создать метод hi у объекта One, который всегда вызывает метод greeting объекта helperObj от имени Two\r\n\r\n// Реализовать задачи 2-4 из Bind с помощью Call\r\n\r\n\r\n// just a plug\r\nexport default () => {\r\n};\r\n","D:\\react-prosto\\JsLessons\\src\\lessons\\lesson6\\lesson6.ts",["91"],"console.log('Lesson 6');\r\n\r\n// Class\r\n// https://learn.javascript.ru/classes\r\n// https://medium.com/front-stories/%D0%BA%D0%B0%D0%BA-%D1%80%D0%B0%D0%B1%D0%BE%D1%82%D0%B0%D1%8E%D1%82-%D0%BA%D0%BB%D0%B0%D1%81%D1%81%D1%8B-%D0%B2-javascript-7978c0003f1d\r\n// https://www.typescriptlang.org/docs/handbook/classes.html\r\n// https://www.youtube.com/watch?v=BASquaxab_w\r\n// https://www.youtube.com/watch?v=uLY9GXGMXaA\r\n\r\n// class Test {\r\n//     // типизация\r\n//     name: string\r\n//     constructor(name: string) {\r\n//         this.name = name;\r\n//     }\r\n//     hi() {\r\n//         console.log('hi')\r\n//     }\r\n// }\r\n// let test = new Test('Mikola')\r\n// console.log(test)\r\n// -----------------\r\n\r\n// class Animal {\r\n//     name: string\r\n//     constructor(name: string) {\r\n//     this.name = name\r\n//     }\r\n//     eat(){\r\n//         console.log(`Animal is eating`)\r\n//     }\r\n// }\r\n// class Monkey extends Animal{\r\n//\r\n//     constructor(name: string) {\r\n//         super(name); // super используется для вызова родит. конструктора,\r\n//     }\r\n//     sleep(){\r\n//         console.log(`is sleeping`)\r\n//     }\r\n//     eat(){\r\n//         console.log(`${this.name} is eating`)\r\n//     }\r\n// }\r\n// let monkey = new Monkey('Чача')\r\n// monkey.eat()\r\n\r\n// Task 01\r\n// Создайте структуру с именем student, содержащую поля: имя и фамилия, номер группы, успеваемость (массив из пяти элементов).\r\n// Создать массив из десяти элементов такого типа, упорядочить записи по возрастанию среднего балла.\r\n// Добавить возможность вывода фамилий и номеров групп студентов, имеющих оценки, равные только 4 или 5.\r\n\r\n// interface IStudent {\r\n//     name: string;\r\n//     surname: string;\r\n//     groupNumber: number;\r\n//     progress: number[];\r\n//     averageMark: number;\r\n// }\r\n//\r\n// class Student implements IStudent {\r\n//     name: string;\r\n//     surname: string;\r\n//     groupNumber: number;\r\n//     progress: number[];\r\n//     averageMark: number;\r\n//\r\n//     constructor(name: string, surname: string, groupNumber: number, progress: number[]) {\r\n//         this.name = name;\r\n//         this.surname = surname;\r\n//         this.groupNumber = groupNumber;\r\n//         this.progress = progress;\r\n//         this.averageMark = this.progress.reduce((sum, mark) => sum + mark) / this.progress.length;\r\n//     }\r\n//\r\n//     private static sortStudent(s1: Student, s2: Student) {\r\n//         if (s1.averageMark > s2.averageMark) {\r\n//             return 1;\r\n//         } else if (s1.averageMark < s2.averageMark) {\r\n//             return -1;\r\n//         } else {\r\n//             return 0;\r\n//         }\r\n//     }\r\n//\r\n//     static sort(arr: Array<Student>) {\r\n//         const temp = [...arr];\r\n//         return temp.sort(this.sortStudent);\r\n//     }\r\n//\r\n//     private static isAllMarksEqual(marks: number[], mark: number) {\r\n//         return marks.every(item => item === mark);\r\n//     }\r\n//\r\n//     private static filterStudent(arr: Array<Student>) {\r\n//         const result: Array<Student> = [];\r\n//         arr.forEach(item => {\r\n//             if (this.isAllMarksEqual(item.progress, 4) || this.isAllMarksEqual(item.progress, 5)) {\r\n//                 result.push(item);\r\n//             }\r\n//         });\r\n//         return result;\r\n//     }\r\n//\r\n//     static printGoodStudent(arr: Array<Student>) {\r\n//         this.filterStudent(arr).forEach(s => {\r\n//             console.log(`Studen - ${s.surname}, Group - ${s.groupNumber}`);\r\n//         });\r\n//     }\r\n// }\r\n//\r\n// let students: Array<Student> = [];\r\n//\r\n// students.push(new Student('Eugene', 'Sheuchuk', 1, [4, 4, 4, 4, 4]));\r\n// students.push(new Student('Vlad', 'Bizin', 2, [5, 5, 5, 5, 5]));\r\n// students.push(new Student('Hanna', 'Kicel', 3, [4, 5, 4, 5, 5]));\r\n// students.push(new Student('Nick', 'Stone', 4, [3, 4, 3, 5, 3]));\r\n// students.push(new Student('Alex', 'Page', 5, [3, 4, 3, 3, 4]));\r\n// students.push(new Student('Test', 'Testovich', 6, [3, 5, 3, 5]));\r\n//\r\n// Student.printGoodStudent(students);\r\n\r\n\r\n// Task 02\r\n// Создать класс с двумя переменными. Добавить конструктор с входными параметрами и инициализирующий члены класса по умолчанию.\r\n// Можно ли создать метод на экземпляре класса который будет удалять сам экземпляр класса? // No\r\n// Можно ли создать метод класса который будет удалять экземпляр класса? // No\r\n\r\n// class Test {\r\n//     one: string;\r\n//     two: string;\r\n//\r\n//     constructor(one: string = 'Hello', two: string = 'World') {\r\n//         this.one = one;\r\n//         this.two = two;\r\n//     }\r\n// }\r\n\r\n// Task 03\r\n// Составить описание класса для представления времени. Предусмотреть возможности установки времени и изменения его отдельных\r\n// полей (час, минута, секунда) с проверкой допустимости вводимых значений. В случае недопустимых значений полей выбрасываются исключения.\r\n// Создать методы изменения времени на заданное количество часов, минут и секунд.\r\n// Создать метод выводящий время в строке формата HH:MM:SS\r\n// Создать класс по вышеуказанному описанию\r\n\r\n// Task 04\r\n// Класс Покупатель: Фамилия, Имя, Адрес, Номер банковского счета;\r\n// Методы: установка значений атрибутов, получение значений атрибутов, вывод информации.\r\n// Создать массив объектов данного класса.\r\n// Вывести список покупателей в алфавитном порядке и список покупателей, у которых номер кредитной карточки находится в заданном диапазоне.\r\n\r\ninterface ICustomer {\r\n    name: string\r\n    surname: string\r\n    address: string\r\n    account: number\r\n}\r\n\r\nclass Customer implements ICustomer {\r\n    private _name: string\r\n    private _surname: string\r\n    private _address: string\r\n    private _account: number\r\n\r\n    constructor(name: string, surname: string, address: string, account: number) {\r\n        this._name = name\r\n        this._surname = surname\r\n        this._address = address\r\n        this._account = account\r\n    }\r\n\r\n    get name() {\r\n        return this._name;\r\n    }\r\n\r\n    set name(n) {\r\n        this._name = n;\r\n    }\r\n\r\n    get surname() {\r\n        return this._surname;\r\n    }\r\n\r\n    set surname(s) {\r\n        this._surname = s;\r\n    }\r\n\r\n    get address() {\r\n        return this._address;\r\n    }\r\n\r\n    set address(f) {\r\n        this._address = f;\r\n    }\r\n\r\n    get account() {\r\n        return this._account;\r\n    }\r\n\r\n    set account(g) {\r\n        this._account = g;\r\n    }\r\n\r\n    print() {\r\n        console.log(`${this.name} ${this.surname}, Address - ${this.address}, Account - ${this.account}`)\r\n    }\r\n\r\n    static sort(c1: ICustomer, c2: ICustomer) {\r\n        if (c1.name > c2.name) return 1;\r\n        else if (c1.name < c2.name) return -1;\r\n        else return 0;\r\n    }\r\n}\r\n\r\nlet custs = []\r\ncusts.push(new Customer('Mikola', 'Hurinovich', 'Minsk', 1))\r\ncusts.push(new Customer('Petr', 'Hurinovich', 'Minsk', 1))\r\ncusts.push(new Customer('Vova', 'Hurinovich', 'Minsk', 1))\r\n\r\ncusts[0].print()\r\ncusts.sort(Customer.sort)\r\nconsole.log(custs)\r\n// Task 05\r\n// Создать класс машина - имеющий марку, число цилиндров, мощность. Определить конструктор и функцию печати.\r\n// Создать производный класс – грузовик, имеющий грузоподъемность кузова.\r\n// Определить функции переназначения марки и грузоподъемности.\r\n\r\n// just a plug\r\nexport default () => {\r\n};\r\n","D:\\react-prosto\\JsLessons\\src\\lessons\\lesson7\\lesson7.ts",["92"],{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"93","replacedBy":"97"},{"ruleId":"95","replacedBy":"98"},{"ruleId":"99","severity":1,"message":"100","line":92,"column":12,"nodeType":"101","messageId":"102","endLine":92,"endColumn":17},{"ruleId":"99","severity":1,"message":"103","line":111,"column":10,"nodeType":"101","messageId":"102","endLine":111,"endColumn":18},{"ruleId":"104","severity":1,"message":"105","line":141,"column":1,"nodeType":"106","endLine":142,"endColumn":3},{"ruleId":"99","severity":1,"message":"107","line":1,"column":9,"nodeType":"101","messageId":"102","endLine":1,"endColumn":16},{"ruleId":"99","severity":1,"message":"108","line":2,"column":9,"nodeType":"101","messageId":"102","endLine":2,"endColumn":12},{"ruleId":"104","severity":1,"message":"105","line":74,"column":1,"nodeType":"106","endLine":75,"endColumn":3},{"ruleId":"104","severity":1,"message":"105","line":182,"column":1,"nodeType":"106","endLine":183,"endColumn":3},{"ruleId":"104","severity":1,"message":"105","line":226,"column":1,"nodeType":"106","endLine":227,"endColumn":3},{"ruleId":"104","severity":1,"message":"105","line":229,"column":1,"nodeType":"106","endLine":230,"endColumn":3},{"ruleId":"104","severity":1,"message":"105","line":156,"column":1,"nodeType":"106","endLine":157,"endColumn":3},"no-native-reassign",["109"],"no-negated-in-lhs",["110"],["109"],["110"],"@typescript-eslint/no-unused-vars","'sumTo' is assigned a value but never used.","Identifier","unusedVar","'superSum' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'rejects' is defined but never used.","'log' is defined but never used.","no-global-assign","no-unsafe-negation"]